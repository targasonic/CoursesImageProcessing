# Преобразование серого мира

# Прочитайте изображение из файла img.png. Примените к нему преобразование серого мира. Для этого:
# 1. Сконвертируйте изображение в вещественные числа.
# 2. Подсчитайте коэффициенты rw,gw,bw как описано в видео.
# 3. Поделите каналы изображения на коэффициенты.
# 4. Обрежьте значения пикселей, чтобы они не выходили из допустимого диапазона ([0; 255] или [0;1]).
# Результат сохраните в файл out_img.png.

from skimage.io import *
from skimage import img_as_float, img_as_ubyte
import numpy as np
# читаем изображение
img = img_as_float(imread('img.png'))
# раскладываем на каналы RGB
r,g,b = img[:,:,0], img[:,:,1], img[:,:,2]
# считаем среднее по каждому цвету
r_,g_,b_ = r.mean(),g.mean(),b.mean()
# считаем среднее средних
avg = (r_+g_+b_)/3
# считаем коэффициенты для каждого цвета
r0,g0,b0 = r_/avg, g_/avg, b_/avg
# нормируем цвета
r,g,b = r/r0, g/g0, b/b0
# обрезаем от 0 до 1
r,g,b = np.clip(r,0,1),np.clip(g,0,1),np.clip(b,0,1)
# складываем цвета в одно изображение и сохраняем
img = np.dstack((r,g,b))
imsave('out_img.png',img)
